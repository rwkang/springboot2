/* 2023.12.02 Added for use "QueryDSL"
QueryDSL(Domain Specific Language)은 하이버네이트 쿼리 언어(HQL: Hibernate Query Language)의
 쿼리를 타입에 안전하게 생성 및 관리해주는 프레임워크이다.
    QueryDSL은 정적 타입을 이용하여 SQL과 같은 쿼리를 생성할 수 있게 해 준다.
자바 백엔드 기술은 Spring Boot와 Spring Data JPA를 함께 사용한다. 하지만, 복잡한 쿼리, 동적 쿼리를 구현하는 데 있어 한계가 있다.
이러한 문제점을 해결할 수 있는 것이 QueryDSL이다.
QueryDSL이 등장하기 이전에는 Mybatis, JPQL, Criteria 등 문자열 형태로 쿼리문을 작성하여 컴파일 시에 오류를 발견하는 것이 불가능했다.
하지만, QueryDSL은 자바 코드로 SQL 문을 작성할 수 있어, 컴파일 시에 오류를 발생하여 잘못된 쿼리가 실행되는 것을 방지할 수 있다.

JPQL과 QueryDSL 비교
JPQL
String username = "java";
String jpql = "select m from Member m where m.username = :username";
List<Member> result = em.createQuery(query, Member.class).getResultList();

QueryDSL
String username = "java";

List<Member> result = queryFactory
        .select(member)
        .from(member)
        .where(usernameEq(username))
        .fetch();

===> 만약 아래와 같은 "warning,경고" 문구가 뿌려지면, "Relaod All Gradle Projects" 아이콘을 실행한 후 "build" 하면 된다.
        > Task :test
        OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
        2023-12-03T18:43:34.626+09:00  INFO 63388 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
        2023-12-03T18:43:34.630+09:00  INFO 63388 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
        2023-12-03T18:43:34.642+09:00  INFO 63388 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

        > Task :check
        > Task :build

        Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

        You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

        For more on this, please refer to https://docs.gradle.org/8.2.1/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

출처: https://ittrue.tistory.com/292
author: 2023.12.01 Added by rwkang. To use "QueryDSL" - D
 */

// "gradle"에서 "buildscript"는 "plugins" 보다 "위"에 위치해야 한다.
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'shop.onekorea'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // https://mvnrepository.com/artifact/com.h2database/h2
    runtimeOnly 'com.h2database:h2:2.2.224'

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.2.0'

    runtimeOnly 'com.mysql:mysql-connector-j'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
//    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    // 2023.09.26 Conclusion. 오라클은 결국 안 되네...
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
//    runtimeOnly 'com.oracle.database.jdbc:ojdbc8' // 이거 안 됨...
//    implementation 'com.oracle.database.jdbc:ojdbc8:23.2.0.0' // 이거도 안 됨...
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

    // 2023.12.02 Added for use "QueryDSL"
    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
//    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 2023.10.01 Added. Jasypt Spring Boot Start => JWT Refresh Token 까지 3강 중 1강 00:00 시작. 4강: 3.0.1/2/3은 안 됨.
    // https://www.youtube.com/watch?v=3CY2pk-Ug10&list=PLeMeDIV7bypvyxWv7eIUZubmfx9W-Jjdg&index=4&t=981s
    // https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // 2023.10.04 Added. Spring Security => JWT Refresh Token 까지 3강 중 1강 21:00.
    // 아래 DI 추가 후에, localhost:8088 접속하면, [logein] 창이 뿌려진다. 서버 실행 시에 자동 생성된 [password]를 넣어서 로그인 한다. 아이디는 [user] 임.
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // 2023.11.07 Added. JWT Token 사용을 위한 추가
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    // 2023.11.08 현재 [0.12.0] 버전을 에러나네...
//    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

//    // https://mvnrepository.com/artifact/com.google.guava/guava
//    implementation 'com.google.guava:guava:32.1.2-jre'
//    implementation 'com.github.pagehelper:pagehelper:5.3.2'

}

// clean 시 해당 위치 삭제
//clean {
//    delete file(querydslDir)
//}

tasks.named('test') {
    useJUnitPlatform()
}
